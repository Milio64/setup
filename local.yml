---
- hosts: localhost
  connection: local
  become: true

  tasks:
  #############################################################
  - name: add user emile
    user:
      name: emile
      create_home: yes
      system: no
  - name: add ansible user
    user:
      name: velociraptor
      system: yes

  - name: install packages
    package:
      name:
        - htop
        - vim
        - mc
        - mlocate
        - mutt
        - mailx
        #https://www.cyberithub.com/how-to-install-mail-command-in-rhel-centos/  configuratie van mailx moet nog afgemaakt worden.
        #- tmux

  - name: "install oh-my-bash1 voor root"
    ansible.builtin.shell:
      cmd: bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)" && sed -i 's/"font"/"agnoster"/' .bashrc
      chdir: /root
      creates: /root/.oh-my-bash

  - name: Ansible logging AAN
    replace:
      path: "/etc/ansible/ansible.cfg"
      after: "# if so defined, consider logrotate"
      regexp: "#log_path = /var/log/ansible.log"
      replace: "log_path = /var/log/ansible.log"


  - name: Copy System files
    copy: src={{ item.src }} dest={{ item.dest }}
    with_items:
      - { src: 'files/logrotate/ansible', dest: ' /etc/logrotate.d/ansible' }
      - { src: 'files/sudoers.d/emile', dest: '/etc/sudoers.d/emile' }

  #- name: copy logrotate ansible
  #  copy:
  #    src: files/logrotate/ansible
  #    dest: /etc/logrotate.d/ansible
  #    owner: root
  #    group: root
  #  become: yes
  #  become_user: root

  - name: ensure file exists voor mailen root
    copy:
      content: ""
      dest: /var/spool/mail/root
      force: no
      group: mail
      owner: root
      mode: 0660
    become: yes
    become_user: root

  - name: ensure file exists voor mailen emile
    copy:
      content: ""
      dest: /var/spool/mail/emile
      force: no
      group: mail
      owner: emile
      mode: 0660
    become: yes
    become_user: root

  - name: "beheer van keys voor root"
    ansible.posix.authorized_key: user=root key="{{ lookup('file', item) }}" state=present
    with_fileglob:
      - files/ssh/add/*.pub
   - name: "add key voor Emile"
    aansible.posix.authorized_key: user=emile key="{{ lookup('file', item) }}" state=present
    with_fileglob:
      - files/ssh/add/*.pub
  - name: "remove keys voor Emile"
    ansible.posix.authorized_key: user=emile key="{{ lookup('file', item) }}" state=absent
    with_fileglob:
      - files/ssh/remove/*.pub
  - name: "remove keys voor root"
    aansible.posix.authorized_key: user=root key="{{ lookup('file', item) }}" state=absent
    with_fileglob:
      - files/ssh/remove/*.pub

#  - name: Check grafisch omgeving ja/nee
#    shell: readlink -f /etc/systemd/system/default.target
#    register: shell_output
#
#  - name: copy wallpaper file
#    copy:
#      src: files/wallpaper.png
#      dest: /usr/share/backgrounds/ansible-wallpaper.png
#      owner: root
#      group: root
#    when: shell_output.stdout == "/usr/lib/systemd/system/graphical.target"
#
#  - name: set wallpaper
#    become_user: emile
#    dconf:
#      key: "/org/gnome/desktop/background/picture-uri"
#      value: "'file:///usr/share/backgrounds/ansible-wallpaper.png'"
#    when: shell_output.stdout == "/usr/lib/systemd/system/graphical.target"
#
#  - name: set wallpaper position
#    become_user: emile
#    dconf:
#      key: "/org/gnome/desktop/background/picture-options"
#      value: "'zoom'"
#    when: shell_output.stdout == "/usr/lib/systemd/system/graphical.target"


  - name: Copy files voor root
    copy:
      src: '{{item}}'
      dest: '/root'
      owner: root
      group: root
    become: yes
    become_user: root
    loop:
      - files/.bashrc
      - files/.bashprofile
      - files/.viminfo

  - name: Copy files voor emile
    copy:
      src: '{{item}}'
      dest: '/home/emile'
      owner: emile
      group: emile
    become: yes
    become_user: root
    loop:
      - files/.bashrc
      - files/.bashprofile
      - files/.viminfo


  - name: set up sudo for ansible user
    copy:
      src: files/sudoer_velociraptor
      dest: /etc/sudoers.d/velociraptor
      owner: root
      group: root
      mode: 0440

  - name: add ansible-pull cron job
    cron:
      name: ansible auto-provision
      user: velociraptor
      minute: "*/10"
      job: ansible-pull -o -U https://github.com/Milio64/setup.git
  
  #####################################################################################
  #####################################################################################
  # DNF updates 
  - name: update
    dnf:
      update_cache: yes
  
  - name: upgrade
    dnf:
      name: "*"
      state: latest
  
  - name: Check if reboot is needed
    shell: dnf needs-restarting -r ; echo $?
    args:
      warn: false
    register: reboot_required_command
  
  - name: Extract return code from output
    set_fact:
      reboot_required: "{{ reboot_required_command.stdout_lines | last }}"
  
  - name: Reboot
    reboot:
    when: reboot_required == "1"
   
   # - name: Mac van Rocky-new zet naam 00:50:08:09:0c:f2
